#!/bin/sh /etc/rc.common
# Copyright (C) 2008-2012 OpenWrt.org

START=80
STOP=80

USE_PROCD=1
PROG1=/usr/sbin/smbd
PROG2=/usr/sbin/nmbd

#log smb.conf to syslog
smbconf2syslog() {
	[ -f /etc/samba/smb.conf ] || {
		logger -s -p 3 -t "smbconf" "FATAL! smb.conf missing!"
		return
	}

	cat /etc/samba/smb.conf | while read line
	do
		logger -s -p 3 -t "smbconf" "$line" > /dev/null 2>&1
	done
}

smb_tune() {
	local flag=`uci get misc.samba.smb_tune`
	[ "$flag" = "1" ] || return

	# set snd/rcv buf size
	local sbuf=`uci get misc.samba.smb_sndbuf`
	local rbuf=`uci get misc.samba.smb_rcvbuf`
	local wcache=`uci get misc.samba.smb_wcache`
	local max_buf=`uci get misc.samba.smb2_max_buf`
	sed -i "s/socket options =.*/& SO_SNDBUFFORCE=$sbuf SO_RCVBUFFORCE=$rbuf/" /var/etc/smb.conf
	[ -n "$wcache" ] && sed -i $'/socket/ a \\\t'"write cache size = $wcache" /var/etc/smb.conf
	[ -n "$max_buf" ] && sed -i $'/socket/ a \\\t'"smb2 max read = $max_buf" /var/etc/smb.conf
	[ -n "$max_buf" ] && sed -i $'/socket/ a \\\t'"smb2 max write = $max_buf" /var/etc/smb.conf
	[ -n "$max_buf" ] && sed -i $'/socket/ a \\\t'"smb2 max trans = $max_buf" /var/etc/smb.conf

	# set core binding
	local default_cpumask=`uci get misc.samba.default_cpumask 2>/dev/null`
	[ -z "$default_cpumask" ] && return

	local et_ifname=`uci get misc.samba.et_ifname 2>/dev/null`
	local et_cpumask=`uci get misc.samba.et_cpumask 2>/dev/null`
	local wl_ifname=`uci get misc.samba.wl_ifname 2>/dev/null`
	local wl_cpumask=`uci get misc.samba.wl_cpumask 2>/dev/null`

	local TAB=$'\t'
	local line=`grep -n "server role" /etc/samba/smb.conf | cut -d ":" -f 1`

	sed -i "$line i \\${TAB}ifgroup cpumask = $wl_cpumask" /var/etc/smb.conf
	sed -i "$line i \\${TAB}ifgroup ifnames = $wl_ifname" /var/etc/smb.conf
	sed -i "$line i \\${TAB}ifgroup cpumask = $et_cpumask" /var/etc/smb.conf
	sed -i "$line i \\${TAB}ifgroup ifnames = $et_ifname" /var/etc/smb.conf
	sed -i "$line i \\${TAB}default cpumask = $default_cpumask" /var/etc/smb.conf
}

updateconfig() {
	config_load samba
	config_foreach smb_header samba
	config_foreach smb_add_share sambashare
	smbconf2syslog
}

smb_header() {
	local interface
	config_get interface $1 interface "loopback lan"

	# resolve interfaces
	local interfaces=$(
		. /lib/functions/network.sh

		local net
		for net in $interface; do
			local device
			network_get_device device "$net" && {
				local subnet
				network_get_subnet  subnet "$net" && echo -n "$subnet "
				network_get_subnet6 subnet "$net" && echo -n "$subnet "
			}

			echo -n "${device:-$net} "
		done
	)

	local name workgroup description charset passwdfile logfile
	local hostname="$(uci_get system.@system[0].hostname)"

	config_get name        $1 name        "${hostname:-OpenWrt}"
	config_get workgroup   $1 workgroup   "${hostname:-OpenWrt}"
	config_get description $1 description "Samba on ${hostname:-OpenWrt}"
	config_get charset     $1 charset     "UTF8"

	mkdir -p /var/etc
	passwdfile="/etc/samba/smbpasswd"
	logfile="/tmp/log/samba.log"
	sed -e "s#|NAME|#$name#g" \
            -e "s#|WORKGROUP|#$workgroup#g" \
            -e "s#|DESCRIPTION|#$description#g" \
            -e "s#|INTERFACES|#$interfaces#g" \
            -e "s#|CHARSET|#$charset#g" \
            -e "s#|PASSWDFILE|#$passwdfile#g" \
            -e "s#|LOGFILE|#$logfile#g" \
            /etc/samba/smb.conf.template > /var/etc/smb.conf

	# samba performance tuning
	smb_tune

	local homes
	config_get_bool homes $1 homes 0
	[ $homes -gt 0 ] && {
		cat <<EOT >> /var/etc/smb.conf

[homes]
	comment     = Home Directories
	browsable   = no
	read only   = no
	create mode = 0750
EOT
	}

	[ -L /etc/samba/smb.conf ] || ln -nsf /var/etc/smb.conf /etc/samba/smb.conf
}

smb_add_share() {
	local name
	local path
	local preexec
	local users
	local read_only
	local guest_ok
	local create_mask
	local dir_mask
	local browseable
	local force_user

	config_get name $1 name
	config_get path $1 path
	config_get preexec $1 preexec
	config_get users $1 users
	config_get read_only $1 read_only
	config_get guest_ok $1 guest_ok
	config_get create_mask $1 create_mask
	config_get dir_mask $1 dir_mask
	config_get browseable $1 browseable
	config_get force_user $1 force_user

	[ -z "$name" -o -z "$path" ] && return

	echo -e "\n[$name]\n\tpath = $path" >> /var/etc/smb.conf
	[ -n "$preexec" ] && echo -e "\tpreexec = $preexec" >> /var/etc/smb.conf
	[ -n "$users" ] && echo -e "\tvalid users = $users" >> /var/etc/smb.conf
	[ -n "$read_only" ] && echo -e "\tread only = $read_only" >> /var/etc/smb.conf
	[ -n "$guest_ok" ] && echo -e "\tguest ok = $guest_ok" >> /var/etc/smb.conf
	[ -n "$create_mask" ] && echo -e "\tcreate mask = $create_mask" >> /var/etc/smb.conf
	[ -n "$dir_mask" ] && echo -e "\tdirectory mask = $dir_mask" >> /var/etc/smb.conf
	[ -n "$browseable" ] && echo -e "\tbrowseable = $browseable" >> /var/etc/smb.conf
	[ -n "$force_user" ] && echo -e "\tforce user = $force_user" >> /var/etc/smb.conf
}

start_service ()
{
  appid=2882303761517280984
  file=/userdisk/appdata/app_infos/$appid.manifest
  if [ -f $file ]; then
    on=5;
    status=`sed -n '/^status/s/.*\"\(.*\)\".*/\1/pg' $file`
    echo $status
    if [ -n "$status" ]; then
      if [ "$status" = "$on" ]; then
        /usr/sbin/shareUpdate -s
        updateconfig

        procd_open_instance
        procd_set_param command "$PROG1" -F
        procd_set_param cgroup "/dev/cgroup/cpu/samba/tasks;/dev/cgroup/mem/group1/tasks"
        procd_set_param respawn
        procd_close_instance

        procd_open_instance
        procd_set_param command "$PROG2" -F
        procd_set_param cgroup "/dev/cgroup/cpu/samba/tasks;/dev/cgroup/mem/group1/tasks"
        procd_set_param respawn
        procd_close_instance
      fi
    fi
  fi
}

